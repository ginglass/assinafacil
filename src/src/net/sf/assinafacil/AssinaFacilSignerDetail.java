/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AssinaFacilSignerDetail.java
 *
 * Created on 06/10/2010, 22:45:16
 */

package net.sf.assinafacil;

import java.security.cert.CertPath;
import java.security.cert.X509Certificate;
import java.util.List;
import java.util.Set;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.application.Action;

/**
 *
 * @author Mario
 */
public class AssinaFacilSignerDetail extends javax.swing.JDialog {

    Vector<SignerData> signers;
    DefaultTableModel asTableModel;
    DefaultTableModel detailTableModel;
    int lastSelectedSigner = -1;

    /** Creates new form AssinaFacilSignerDetail */
    public AssinaFacilSignerDetail(java.awt.Frame parent, boolean modal, Set<SignerData> signers) {
        super(parent, modal);
        this.signers = new Vector<SignerData>(signers);
        asTableModel = new DefaultTableModel();
        asTableModel.setColumnIdentifiers( new String [] {
                 "Assinador", "Data Assinatura", "VÃ¡lido ICP", "Validade","Estado assinatura"
            }
        );

        detailTableModel = new DefaultTableModel();
        detailTableModel.setColumnIdentifiers( new String [] {
                 "Emitido para", "Emitido por", "Expira em"
            }
        );

        initComponents();
        fillSignerTable();
    }

    private void fillSignerTable() {

        for (SignerData signerData : signers) {
            asTableModel.addRow( new Object[] {
                signerData.getName(),
                signerData.getDateSign(),
                signerData.getIsICPValidate(),
                signerData.getCertificateValidity(),
                signerData.getSignerState()
                }
            );
        }
        jTable1.repaint();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 388));
        setModal(true);
        setName("Form"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(net.sf.assinafacil.AssinaFacilApp.class).getContext().getActionMap(AssinaFacilSignerDetail.class, this);
        jButton1.setAction(actionMap.get("showCertDetais")); // NOI18N
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(net.sf.assinafacil.AssinaFacilApp.class).getContext().getResourceMap(AssinaFacilSignerDetail.class);
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N

        jScrollPane3.setAutoscrolls(true);
        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jTable2.setModel(detailTableModel);
        jTable2.setColumnSelectionAllowed(true);
        jTable2.setName("jTable2"); // NOI18N
        jTable2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable2MousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);
        jTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jButton2.setAction(actionMap.get("closeSignerOverview")); // NOI18N
        jButton2.setText(resourceMap.getString("jButton2.text")); // NOI18N
        jButton2.setName("jButton2"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setName("jTextArea1"); // NOI18N
        jTextArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextArea1MousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1018, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1018, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 332, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(asTableModel);
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setName("tabelaAssinaturas"); // NOI18N
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1172, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
          // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTextArea1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextArea1MousePressed

    private void jTable2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MousePressed
        this.showCertDetail(jTable2.getSelectedRow());        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MousePressed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        showCertDetais();
    }//GEN-LAST:event_jTable1MousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables


    @Action
    public void closeSignerOverview() {
        this.setVisible(false);
        this.dispose();
    }

    @Action
    public void showCertDetais() {

        while(detailTableModel.getRowCount()!=0)
            detailTableModel.removeRow(0);

        jTable2.repaint();

        int rowSelected = jTable1.getSelectedRow();

        if (rowSelected == -1) {
            return;
        }
        lastSelectedSigner = rowSelected;

        SignerData signerDetail = signers.get(rowSelected);
        CertPath cp = signerDetail.getCertificatePath();

        for (X509Certificate x509Cert : (List<X509Certificate>) cp.getCertificates()) {
            detailTableModel.addRow(new Object[] {
                x509Cert.getSubjectDN(),
                x509Cert.getIssuerDN(),
                x509Cert.getNotAfter()
            });
        }
        X509Certificate x509Trust = signerDetail.getTrust();

        detailTableModel.addRow(new Object[] {
            x509Trust.getSubjectDN(),
            x509Trust.getIssuerDN(),
            x509Trust.getNotAfter()
        });
    }

    private void showCertDetail(int selectedRow) {
        System.err.println("Linha "+selectedRow);
        if (selectedRow == -1) {
            this.jTextArea1.setText("Selecione um certificado...");
        }
        SignerData signerDetail = signers.get(lastSelectedSigner);

        List cp = signerDetail.getCertificatePath().getCertificates();
        
        X509Certificate x509Cert;

        if (selectedRow < cp.size()) {
            x509Cert = (X509Certificate) cp.get(selectedRow);
        } else {
            x509Cert = signerDetail.getTrust();
        }
        jTextArea1.setText(UtiICPBrasill.showCertDetail(x509Cert));

    }
}
